{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dannasalazar11/eegnet-results?scriptVersionId=192354493\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"c3b12141","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-08-12T15:58:48.435624Z","iopub.status.busy":"2024-08-12T15:58:48.435331Z","iopub.status.idle":"2024-08-12T16:00:15.32437Z","shell.execute_reply":"2024-08-12T16:00:15.323268Z"},"papermill":{"duration":86.897275,"end_time":"2024-08-12T16:00:15.326698","exception":false,"start_time":"2024-08-12T15:58:48.429423","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting git+https://github.com/UN-GCPDS/python-gcpds.databases\r\n","  Cloning https://github.com/UN-GCPDS/python-gcpds.databases to /tmp/pip-req-build-pjol0baf\r\n","  Running command git clone --filter=blob:none --quiet https://github.com/UN-GCPDS/python-gcpds.databases /tmp/pip-req-build-pjol0baf\r\n","  Resolved https://github.com/UN-GCPDS/python-gcpds.databases to commit c35637e1a19d7cd21656496339c1dedae6714916\r\n","  Preparing metadata (setup.py) ... \u001b[?25ldone\r\n","\u001b[?25hRequirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (1.26.4)\r\n","Requirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (1.11.4)\r\n","Requirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (3.7.5)\r\n","Requirement already satisfied: mne in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (1.7.0)\r\n","Requirement already satisfied: tables in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (3.9.2)\r\n","Requirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (4.66.4)\r\n","Requirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from gcpds-databases==0.2) (2.2.1)\r\n","Collecting gdown (from gcpds-databases==0.2)\r\n","  Downloading gdown-5.2.0-py3-none-any.whl.metadata (5.8 kB)\r\n","Requirement already satisfied: beautifulsoup4 in /opt/conda/lib/python3.10/site-packages (from gdown->gcpds-databases==0.2) (4.12.2)\r\n","Requirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from gdown->gcpds-databases==0.2) (3.13.1)\r\n","Requirement already satisfied: requests[socks] in /opt/conda/lib/python3.10/site-packages (from gdown->gcpds-databases==0.2) (2.32.3)\r\n","Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (1.2.0)\r\n","Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (0.12.1)\r\n","Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (4.47.0)\r\n","Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (1.4.5)\r\n","Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (21.3)\r\n","Requirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (9.5.0)\r\n","Requirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (3.1.1)\r\n","Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib->gcpds-databases==0.2) (2.9.0.post0)\r\n","Requirement already satisfied: decorator in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-databases==0.2) (5.1.1)\r\n","Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-databases==0.2) (3.1.2)\r\n","Requirement already satisfied: lazy-loader>=0.3 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-databases==0.2) (0.3)\r\n","Requirement already satisfied: pooch>=1.5 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-databases==0.2) (1.8.1)\r\n","Requirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas->gcpds-databases==0.2) (2023.3.post1)\r\n","Requirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas->gcpds-databases==0.2) (2023.4)\r\n","Requirement already satisfied: numexpr>=2.6.2 in /opt/conda/lib/python3.10/site-packages (from tables->gcpds-databases==0.2) (2.10.0)\r\n","Requirement already satisfied: py-cpuinfo in /opt/conda/lib/python3.10/site-packages (from tables->gcpds-databases==0.2) (9.0.0)\r\n","Requirement already satisfied: blosc2>=2.3.0 in /opt/conda/lib/python3.10/site-packages (from tables->gcpds-databases==0.2) (2.6.2)\r\n","Requirement already satisfied: ndindex>=1.4 in /opt/conda/lib/python3.10/site-packages (from blosc2>=2.3.0->tables->gcpds-databases==0.2) (1.8)\r\n","Requirement already satisfied: msgpack in /opt/conda/lib/python3.10/site-packages (from blosc2>=2.3.0->tables->gcpds-databases==0.2) (1.0.7)\r\n","Requirement already satisfied: platformdirs>=2.5.0 in /opt/conda/lib/python3.10/site-packages (from pooch>=1.5->mne->gcpds-databases==0.2) (3.11.0)\r\n","Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib->gcpds-databases==0.2) (1.16.0)\r\n","Requirement already satisfied: soupsieve>1.2 in /opt/conda/lib/python3.10/site-packages (from beautifulsoup4->gdown->gcpds-databases==0.2) (2.5)\r\n","Requirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->mne->gcpds-databases==0.2) (2.1.3)\r\n","Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests[socks]->gdown->gcpds-databases==0.2) (3.3.2)\r\n","Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests[socks]->gdown->gcpds-databases==0.2) (3.6)\r\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests[socks]->gdown->gcpds-databases==0.2) (1.26.18)\r\n","Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests[socks]->gdown->gcpds-databases==0.2) (2024.2.2)\r\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /opt/conda/lib/python3.10/site-packages (from requests[socks]->gdown->gcpds-databases==0.2) (1.7.1)\r\n","Downloading gdown-5.2.0-py3-none-any.whl (18 kB)\r\n","Building wheels for collected packages: gcpds-databases\r\n","  Building wheel for gcpds-databases (setup.py) ... \u001b[?25l-\b \bdone\r\n","\u001b[?25h  Created wheel for gcpds-databases: filename=gcpds_databases-0.2-py3-none-any.whl size=94504 sha256=68c5680f62193367b47b16c51713a532a9d2cfe4b74e396479d71e96046111d2\r\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-dcwvkyew/wheels/8e/66/a7/91b78b1787a3e4d17cb82ea2da67845aa9389012c0ed8280b0\r\n","Successfully built gcpds-databases\r\n","Installing collected packages: gdown, gcpds-databases\r\n","Successfully installed gcpds-databases-0.2 gdown-5.2.0\r\n","Collecting git+https://github.com/UN-GCPDS/python-gcpds.EEG_Tensorflow_models\r\n","  Cloning https://github.com/UN-GCPDS/python-gcpds.EEG_Tensorflow_models to /tmp/pip-req-build-vagkw4yc\r\n","  Running command git clone --filter=blob:none --quiet https://github.com/UN-GCPDS/python-gcpds.EEG_Tensorflow_models /tmp/pip-req-build-vagkw4yc\r\n","  Resolved https://github.com/UN-GCPDS/python-gcpds.EEG_Tensorflow_models to commit 975885b1f6814fd5958199919b33e02a6a9aa152\r\n","  Preparing metadata (setup.py) ... \u001b[?25ldone\r\n","\u001b[?25hCollecting braindecode==0.7 (from EEG_Tensorflow_models==0.2)\r\n","  Downloading Braindecode-0.7-py3-none-any.whl.metadata (6.8 kB)\r\n","Collecting moabb (from EEG_Tensorflow_models==0.2)\r\n","  Downloading moabb-1.1.0-py3-none-any.whl.metadata (16 kB)\r\n","Collecting tensorflow-addons (from EEG_Tensorflow_models==0.2)\r\n","  Downloading tensorflow_addons-0.23.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.8 kB)\r\n","Requirement already satisfied: tensorflow>=2.8 in /opt/conda/lib/python3.10/site-packages (from EEG_Tensorflow_models==0.2) (2.15.0)\r\n","Collecting tf-keras-vis (from EEG_Tensorflow_models==0.2)\r\n","  Downloading tf_keras_vis-0.8.7-py3-none-any.whl.metadata (10 kB)\r\n","Requirement already satisfied: mne in /opt/conda/lib/python3.10/site-packages (from braindecode==0.7->EEG_Tensorflow_models==0.2) (1.7.0)\r\n","Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from braindecode==0.7->EEG_Tensorflow_models==0.2) (1.26.4)\r\n","Requirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from braindecode==0.7->EEG_Tensorflow_models==0.2) (2.2.1)\r\n","Requirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from braindecode==0.7->EEG_Tensorflow_models==0.2) (1.11.4)\r\n","Requirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from braindecode==0.7->EEG_Tensorflow_models==0.2) (3.7.5)\r\n","Requirement already satisfied: h5py in /opt/conda/lib/python3.10/site-packages (from braindecode==0.7->EEG_Tensorflow_models==0.2) (3.10.0)\r\n","Collecting skorch (from braindecode==0.7->EEG_Tensorflow_models==0.2)\r\n","  Downloading skorch-1.0.0-py3-none-any.whl.metadata (11 kB)\r\n","Requirement already satisfied: absl-py>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.4.0)\r\n","Requirement already satisfied: astunparse>=1.6.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.6.3)\r\n","Requirement already satisfied: flatbuffers>=23.5.26 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (23.5.26)\r\n","Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.5.4)\r\n","Requirement already satisfied: google-pasta>=0.1.1 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.2.0)\r\n","Requirement already satisfied: libclang>=13.0.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (16.0.6)\r\n","Requirement already satisfied: ml-dtypes~=0.2.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.2.0)\r\n","Requirement already satisfied: opt-einsum>=2.3.2 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (3.3.0)\r\n","Requirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (21.3)\r\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (3.20.3)\r\n","Requirement already satisfied: setuptools in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (69.0.3)\r\n","Requirement already satisfied: six>=1.12.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.16.0)\r\n","Requirement already satisfied: termcolor>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (2.4.0)\r\n","Requirement already satisfied: typing-extensions>=3.6.6 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (4.9.0)\r\n","Requirement already satisfied: wrapt<1.15,>=1.11.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.14.1)\r\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.35.0)\r\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.59.3)\r\n","Requirement already satisfied: tensorboard<2.16,>=2.15 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (2.15.1)\r\n","Requirement already satisfied: tensorflow-estimator<2.16,>=2.15.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow>=2.8->EEG_Tensorflow_models==0.2) (2.15.0)\r\n","Collecting keras<2.16,>=2.15.0 (from tensorflow>=2.8->EEG_Tensorflow_models==0.2)\r\n","  Downloading keras-2.15.0-py3-none-any.whl.metadata (2.4 kB)\r\n","Requirement already satisfied: PyYAML<7.0,>=6.0 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (6.0.1)\r\n","Collecting coverage<8.0.0,>=7.0.1 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading coverage-7.6.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.3 kB)\r\n","Collecting edfio<0.5.0,>=0.4.2 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading edfio-0.4.3-py3-none-any.whl.metadata (4.0 kB)\r\n","Collecting edflib-python<2.0.0,>=1.0.6 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading EDFlib_Python-1.0.8-py3-none-any.whl.metadata (1.3 kB)\r\n","Requirement already satisfied: memory-profiler<0.62.0,>=0.61.0 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (0.61.0)\r\n","Collecting mne-bids<0.15,>=0.14 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading mne_bids-0.14-py2.py3-none-any.whl.metadata (4.8 kB)\r\n","Collecting pandas (from braindecode==0.7->EEG_Tensorflow_models==0.2)\r\n","  Downloading pandas-1.5.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\r\n","Requirement already satisfied: pooch<2.0.0,>=1.6.0 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (1.8.1)\r\n","Collecting pyriemann<0.7,>=0.6 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading pyriemann-0.6-py2.py3-none-any.whl.metadata (8.3 kB)\r\n","Collecting pytest<8.0.0,>=7.4.0 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading pytest-7.4.4-py3-none-any.whl.metadata (7.9 kB)\r\n","Requirement already satisfied: requests<3.0.0,>=2.28.1 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (2.32.3)\r\n","Collecting scikit-learn>=1.4.2 (from moabb->EEG_Tensorflow_models==0.2)\r\n","  Downloading scikit_learn-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\r\n","Requirement already satisfied: seaborn<0.13.0,>=0.12.1 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (0.12.2)\r\n","Requirement already satisfied: tqdm<5.0.0,>=4.64.1 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (4.66.4)\r\n","Requirement already satisfied: urllib3<2.0.0,>=1.26.15 in /opt/conda/lib/python3.10/site-packages (from moabb->EEG_Tensorflow_models==0.2) (1.26.18)\r\n","Collecting typeguard<3.0.0,>=2.7 (from tensorflow-addons->EEG_Tensorflow_models==0.2)\r\n","  Downloading typeguard-2.13.3-py3-none-any.whl.metadata (3.6 kB)\r\n","Requirement already satisfied: pillow in /opt/conda/lib/python3.10/site-packages (from tf-keras-vis->EEG_Tensorflow_models==0.2) (9.5.0)\r\n","Requirement already satisfied: deprecated in /opt/conda/lib/python3.10/site-packages (from tf-keras-vis->EEG_Tensorflow_models==0.2) (1.2.14)\r\n","Requirement already satisfied: imageio in /opt/conda/lib/python3.10/site-packages (from tf-keras-vis->EEG_Tensorflow_models==0.2) (2.33.1)\r\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /opt/conda/lib/python3.10/site-packages (from astunparse>=1.6.0->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.42.0)\r\n","Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->braindecode==0.7->EEG_Tensorflow_models==0.2) (1.2.0)\r\n","Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->braindecode==0.7->EEG_Tensorflow_models==0.2) (0.12.1)\r\n","Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->braindecode==0.7->EEG_Tensorflow_models==0.2) (4.47.0)\r\n","Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->braindecode==0.7->EEG_Tensorflow_models==0.2) (1.4.5)\r\n","Requirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->braindecode==0.7->EEG_Tensorflow_models==0.2) (3.1.1)\r\n","Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib->braindecode==0.7->EEG_Tensorflow_models==0.2) (2.9.0.post0)\r\n","Requirement already satisfied: psutil in /opt/conda/lib/python3.10/site-packages (from memory-profiler<0.62.0,>=0.61.0->moabb->EEG_Tensorflow_models==0.2) (5.9.3)\r\n","Requirement already satisfied: decorator in /opt/conda/lib/python3.10/site-packages (from mne->braindecode==0.7->EEG_Tensorflow_models==0.2) (5.1.1)\r\n","Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from mne->braindecode==0.7->EEG_Tensorflow_models==0.2) (3.1.2)\r\n","Requirement already satisfied: lazy-loader>=0.3 in /opt/conda/lib/python3.10/site-packages (from mne->braindecode==0.7->EEG_Tensorflow_models==0.2) (0.3)\r\n","Requirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas->braindecode==0.7->EEG_Tensorflow_models==0.2) (2023.3.post1)\r\n","Requirement already satisfied: platformdirs>=2.5.0 in /opt/conda/lib/python3.10/site-packages (from pooch<2.0.0,>=1.6.0->moabb->EEG_Tensorflow_models==0.2) (3.11.0)\r\n","Requirement already satisfied: joblib in /opt/conda/lib/python3.10/site-packages (from pyriemann<0.7,>=0.6->moabb->EEG_Tensorflow_models==0.2) (1.4.2)\r\n","Requirement already satisfied: iniconfig in /opt/conda/lib/python3.10/site-packages (from pytest<8.0.0,>=7.4.0->moabb->EEG_Tensorflow_models==0.2) (2.0.0)\r\n","Requirement already satisfied: pluggy<2.0,>=0.12 in /opt/conda/lib/python3.10/site-packages (from pytest<8.0.0,>=7.4.0->moabb->EEG_Tensorflow_models==0.2) (1.5.0)\r\n","Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /opt/conda/lib/python3.10/site-packages (from pytest<8.0.0,>=7.4.0->moabb->EEG_Tensorflow_models==0.2) (1.2.0)\r\n","Requirement already satisfied: tomli>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from pytest<8.0.0,>=7.4.0->moabb->EEG_Tensorflow_models==0.2) (2.0.1)\r\n","Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests<3.0.0,>=2.28.1->moabb->EEG_Tensorflow_models==0.2) (3.3.2)\r\n","Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests<3.0.0,>=2.28.1->moabb->EEG_Tensorflow_models==0.2) (3.6)\r\n","Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests<3.0.0,>=2.28.1->moabb->EEG_Tensorflow_models==0.2) (2024.2.2)\r\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /opt/conda/lib/python3.10/site-packages (from scikit-learn>=1.4.2->moabb->EEG_Tensorflow_models==0.2) (3.2.0)\r\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (2.26.1)\r\n","Requirement already satisfied: google-auth-oauthlib<2,>=0.5 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.2.0)\r\n","Requirement already satisfied: markdown>=2.6.8 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (3.5.2)\r\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.7.2)\r\n","Requirement already satisfied: werkzeug>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (3.0.3)\r\n","Requirement already satisfied: tabulate>=0.7.7 in /opt/conda/lib/python3.10/site-packages (from skorch->braindecode==0.7->EEG_Tensorflow_models==0.2) (0.9.0)\r\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (4.2.4)\r\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /opt/conda/lib/python3.10/site-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.3.0)\r\n","Requirement already satisfied: rsa<5,>=3.1.4 in /opt/conda/lib/python3.10/site-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (4.9)\r\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /opt/conda/lib/python3.10/site-packages (from google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (1.3.1)\r\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /opt/conda/lib/python3.10/site-packages (from werkzeug>=1.0.1->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (2.1.3)\r\n","Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /opt/conda/lib/python3.10/site-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (0.5.1)\r\n","Requirement already satisfied: oauthlib>=3.0.0 in /opt/conda/lib/python3.10/site-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow>=2.8->EEG_Tensorflow_models==0.2) (3.2.2)\r\n","Downloading Braindecode-0.7-py3-none-any.whl (184 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m184.4/184.4 kB\u001b[0m \u001b[31m1.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading moabb-1.1.0-py3-none-any.whl (230 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m230.7/230.7 kB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading tensorflow_addons-0.23.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (611 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m611.8/611.8 kB\u001b[0m \u001b[31m9.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading tf_keras_vis-0.8.7-py3-none-any.whl (52 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m52.5/52.5 kB\u001b[0m \u001b[31m3.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading coverage-7.6.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (234 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m234.7/234.7 kB\u001b[0m \u001b[31m15.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading edfio-0.4.3-py3-none-any.whl (25 kB)\r\n","Downloading EDFlib_Python-1.0.8-py3-none-any.whl (26 kB)\r\n","Downloading keras-2.15.0-py3-none-any.whl (1.7 MB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m25.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading mne_bids-0.14-py2.py3-none-any.whl (1.2 MB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m49.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading pandas-1.5.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.1/12.1 MB\u001b[0m \u001b[31m58.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading pyriemann-0.6-py2.py3-none-any.whl (111 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m111.7/111.7 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading pytest-7.4.4-py3-none-any.whl (325 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m325.3/325.3 kB\u001b[0m \u001b[31m20.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading scikit_learn-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.4 MB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.4/13.4 MB\u001b[0m \u001b[31m56.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hDownloading typeguard-2.13.3-py3-none-any.whl (17 kB)\r\n","Downloading skorch-1.0.0-py3-none-any.whl (239 kB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m239.4/239.4 kB\u001b[0m \u001b[31m14.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hBuilding wheels for collected packages: EEG_Tensorflow_models\r\n","  Building wheel for EEG_Tensorflow_models (setup.py) ... \u001b[?25l-\b \bdone\r\n","\u001b[?25h  Created wheel for EEG_Tensorflow_models: filename=EEG_Tensorflow_models-0.2-py3-none-any.whl size=29376 sha256=e568a8a117ece2595c800eab3fff462c161c47272973a0a613ab86b865114dbc\r\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-ragaqsz8/wheels/05/dc/8a/9d552a33fb901c0d7ab2a72746b5ea17643c570811c711d568\r\n","Successfully built EEG_Tensorflow_models\r\n","Installing collected packages: typeguard, keras, edflib-python, edfio, coverage, tf-keras-vis, tensorflow-addons, scikit-learn, pytest, pandas, skorch, pyriemann, mne-bids, braindecode, moabb, EEG_Tensorflow_models\r\n","  Attempting uninstall: typeguard\r\n","    Found existing installation: typeguard 4.1.5\r\n","    Uninstalling typeguard-4.1.5:\r\n","      Successfully uninstalled typeguard-4.1.5\r\n","  Attempting uninstall: keras\r\n","    Found existing installation: keras 3.3.3\r\n","    Uninstalling keras-3.3.3:\r\n","      Successfully uninstalled keras-3.3.3\r\n","  Attempting uninstall: scikit-learn\r\n","    Found existing installation: scikit-learn 1.2.2\r\n","    Uninstalling scikit-learn-1.2.2:\r\n","      Successfully uninstalled scikit-learn-1.2.2\r\n","  Attempting uninstall: pytest\r\n","    Found existing installation: pytest 8.2.1\r\n","    Uninstalling pytest-8.2.1:\r\n","      Successfully uninstalled pytest-8.2.1\r\n","  Attempting uninstall: pandas\r\n","    Found existing installation: pandas 2.2.1\r\n","    Uninstalling pandas-2.2.1:\r\n","      Successfully uninstalled pandas-2.2.1\r\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\r\n","cudf 24.4.1 requires cubinlinker, which is not installed.\r\n","cudf 24.4.1 requires cupy-cuda11x>=12.0.0, which is not installed.\r\n","cudf 24.4.1 requires ptxcompiler, which is not installed.\r\n","cuml 24.4.0 requires cupy-cuda11x>=12.0.0, which is not installed.\r\n","dask-cudf 24.4.1 requires cupy-cuda11x>=12.0.0, which is not installed.\r\n","tensorflow-decision-forests 1.8.1 requires wurlitzer, which is not installed.\r\n","beatrix-jupyterlab 2023.128.151533 requires jupyterlab~=3.6.0, but you have jupyterlab 4.2.1 which is incompatible.\r\n","cudf 24.4.1 requires cuda-python<12.0a0,>=11.7.1, but you have cuda-python 12.5.0 which is incompatible.\r\n","cudf 24.4.1 requires pandas<2.2.2dev0,>=2.0, but you have pandas 1.5.3 which is incompatible.\r\n","dask-cudf 24.4.1 requires pandas<2.2.2dev0,>=2.0, but you have pandas 1.5.3 which is incompatible.\r\n","dask-expr 1.1.2 requires pandas>=2, but you have pandas 1.5.3 which is incompatible.\r\n","featuretools 1.31.0 requires pandas>=2.0.0, but you have pandas 1.5.3 which is incompatible.\r\n","libpysal 4.9.2 requires packaging>=22, but you have packaging 21.3 which is incompatible.\r\n","libpysal 4.9.2 requires shapely>=2.0.1, but you have shapely 1.8.5.post1 which is incompatible.\r\n","mizani 0.11.4 requires pandas>=2.1.0, but you have pandas 1.5.3 which is incompatible.\r\n","momepy 0.7.0 requires shapely>=2, but you have shapely 1.8.5.post1 which is incompatible.\r\n","osmnx 1.9.3 requires shapely>=2.0, but you have shapely 1.8.5.post1 which is incompatible.\r\n","plotnine 0.13.6 requires pandas<3.0.0,>=2.1.0, but you have pandas 1.5.3 which is incompatible.\r\n","pyldavis 3.4.1 requires pandas>=2.0.0, but you have pandas 1.5.3 which is incompatible.\r\n","rapids-dask-dependency 24.4.1a0 requires dask==2024.1.1, but you have dask 2024.5.2 which is incompatible.\r\n","rapids-dask-dependency 24.4.1a0 requires dask-expr==0.4.0, but you have dask-expr 1.1.2 which is incompatible.\r\n","spopt 0.6.0 requires shapely>=2.0.1, but you have shapely 1.8.5.post1 which is incompatible.\r\n","woodwork 0.31.0 requires pandas>=2.0.0, but you have pandas 1.5.3 which is incompatible.\r\n","xarray 2024.5.0 requires packaging>=23.1, but you have packaging 21.3 which is incompatible.\r\n","xarray 2024.5.0 requires pandas>=2.0, but you have pandas 1.5.3 which is incompatible.\r\n","ydata-profiling 4.6.4 requires numpy<1.26,>=1.16.0, but you have numpy 1.26.4 which is incompatible.\r\n","ydata-profiling 4.6.4 requires typeguard<5,>=4.1.2, but you have typeguard 2.13.3 which is incompatible.\u001b[0m\u001b[31m\r\n","\u001b[0mSuccessfully installed EEG_Tensorflow_models-0.2 braindecode-0.7 coverage-7.6.1 edfio-0.4.3 edflib-python-1.0.8 keras-2.15.0 mne-bids-0.14 moabb-1.1.0 pandas-1.5.3 pyriemann-0.6 pytest-7.4.4 scikit-learn-1.5.1 skorch-1.0.0 tensorflow-addons-0.23.0 tf-keras-vis-0.8.7 typeguard-2.13.3\r\n","Collecting git+https://github.com/UN-GCPDS/python-gcpds.visualizations.git\r\n","  Cloning https://github.com/UN-GCPDS/python-gcpds.visualizations.git to /tmp/pip-req-build-qe_hka27\r\n","  Running command git clone --filter=blob:none --quiet https://github.com/UN-GCPDS/python-gcpds.visualizations.git /tmp/pip-req-build-qe_hka27\r\n","  Resolved https://github.com/UN-GCPDS/python-gcpds.visualizations.git to commit 162dbeac141a7472d3b0bd7f005932241b4663a5\r\n","  Preparing metadata (setup.py) ... \u001b[?25ldone\r\n","\u001b[?25hCollecting python-circos (from gcpds-visualizations==0.6)\r\n","  Downloading python_circos-0.3.0-py3-none-any.whl.metadata (766 bytes)\r\n","Requirement already satisfied: matplotlib>=3.5.3 in /opt/conda/lib/python3.10/site-packages (from gcpds-visualizations==0.6) (3.7.5)\r\n","Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from gcpds-visualizations==0.6) (1.26.4)\r\n","Requirement already satisfied: mne in /opt/conda/lib/python3.10/site-packages (from gcpds-visualizations==0.6) (1.7.0)\r\n","Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (1.2.0)\r\n","Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (0.12.1)\r\n","Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (4.47.0)\r\n","Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (1.4.5)\r\n","Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (21.3)\r\n","Requirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (9.5.0)\r\n","Requirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (3.1.1)\r\n","Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.5.3->gcpds-visualizations==0.6) (2.9.0.post0)\r\n","Requirement already satisfied: decorator in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-visualizations==0.6) (5.1.1)\r\n","Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-visualizations==0.6) (3.1.2)\r\n","Requirement already satisfied: lazy-loader>=0.3 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-visualizations==0.6) (0.3)\r\n","Requirement already satisfied: pooch>=1.5 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-visualizations==0.6) (1.8.1)\r\n","Requirement already satisfied: scipy>=1.7.1 in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-visualizations==0.6) (1.11.4)\r\n","Requirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from mne->gcpds-visualizations==0.6) (4.66.4)\r\n","Collecting biopython>=1.78 (from python-circos->gcpds-visualizations==0.6)\r\n","  Downloading biopython-1.84-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\r\n","Requirement already satisfied: platformdirs>=2.5.0 in /opt/conda/lib/python3.10/site-packages (from pooch>=1.5->mne->gcpds-visualizations==0.6) (3.11.0)\r\n","Requirement already satisfied: requests>=2.19.0 in /opt/conda/lib/python3.10/site-packages (from pooch>=1.5->mne->gcpds-visualizations==0.6) (2.32.3)\r\n","Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib>=3.5.3->gcpds-visualizations==0.6) (1.16.0)\r\n","Requirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->mne->gcpds-visualizations==0.6) (2.1.3)\r\n","Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->pooch>=1.5->mne->gcpds-visualizations==0.6) (3.3.2)\r\n","Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->pooch>=1.5->mne->gcpds-visualizations==0.6) (3.6)\r\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->pooch>=1.5->mne->gcpds-visualizations==0.6) (1.26.18)\r\n","Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->pooch>=1.5->mne->gcpds-visualizations==0.6) (2024.2.2)\r\n","Downloading python_circos-0.3.0-py3-none-any.whl (27 kB)\r\n","Downloading biopython-1.84-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.2 MB)\r\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.2/3.2 MB\u001b[0m \u001b[31m11.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n","\u001b[?25hBuilding wheels for collected packages: gcpds-visualizations\r\n","  Building wheel for gcpds-visualizations (setup.py) ... \u001b[?25l-\b \bdone\r\n","\u001b[?25h  Created wheel for gcpds-visualizations: filename=gcpds_visualizations-0.6-py3-none-any.whl size=12439 sha256=83531cd6e0a4623b8373ec22d556f3d75c8782cf24a9242cac5fbd9ec12a9fd9\r\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-e20nu1wm/wheels/fa/f8/e8/78c4b4940a8349e29d9199eee5e3c5f526123608864b3834af\r\n","Successfully built gcpds-visualizations\r\n","Installing collected packages: biopython, python-circos, gcpds-visualizations\r\n","Successfully installed biopython-1.84 gcpds-visualizations-0.6 python-circos-0.3.0\r\n"]}],"source":["!pip install -U git+https://github.com/UN-GCPDS/python-gcpds.databases #Package for database reading.\n","!pip install -U git+https://github.com/UN-GCPDS/python-gcpds.EEG_Tensorflow_models\n","!pip install -U git+https://github.com/UN-GCPDS/python-gcpds.visualizations.git"]},{"cell_type":"code","execution_count":2,"id":"f9d10d62","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:15.359357Z","iopub.status.busy":"2024-08-12T16:00:15.359044Z","iopub.status.idle":"2024-08-12T16:00:32.199575Z","shell.execute_reply":"2024-08-12T16:00:32.198809Z"},"papermill":{"duration":16.859597,"end_time":"2024-08-12T16:00:32.202097","exception":false,"start_time":"2024-08-12T16:00:15.3425","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2024-08-12 16:00:21.718342: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n","2024-08-12 16:00:21.718464: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n","2024-08-12 16:00:21.888798: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"]}],"source":["from gcpds.databases import GIGA_MI_ME\n","from typing import Optional, Sequence, Tuple\n","import numpy as np\n","from sklearn.base import BaseEstimator, TransformerMixin\n","from scipy.signal import freqz, filtfilt, resample\n","from scipy.signal import butter as bw\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import Dense, Activation, Dropout\n","from tensorflow.keras.layers import Conv2D, AveragePooling2D\n","from tensorflow.keras.layers import SeparableConv2D, DepthwiseConv2D\n","from tensorflow.keras.layers import BatchNormalization\n","from tensorflow.keras.layers import SpatialDropout2D\n","from sklearn.model_selection import train_test_split\n","from tensorflow.keras.layers import Input, Flatten\n","from tensorflow.keras.constraints import max_norm\n","import tensorflow as tf\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.decomposition import PCA\n","from sklearn.manifold import TSNE\n","import matplotlib.pyplot as plt\n","from gcpds.visualizations.connectivities import CircosConnectivity\n","from gcpds.visualizations.topoplots import topoplot"]},{"cell_type":"code","execution_count":3,"id":"d1a0b216","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:32.235393Z","iopub.status.busy":"2024-08-12T16:00:32.234741Z","iopub.status.idle":"2024-08-12T16:00:32.244788Z","shell.execute_reply":"2024-08-12T16:00:32.243957Z"},"papermill":{"duration":0.028502,"end_time":"2024-08-12T16:00:32.246709","exception":false,"start_time":"2024-08-12T16:00:32.218207","status":"completed"},"tags":[]},"outputs":[],"source":["#from MI_EEG_ClassMeth.FeatExtraction import TimeFrequencyRpr\n","def load_GIGA(db: GIGA_MI_ME,\n","              sbj: int,\n","              eeg_ch_names: Sequence[str],\n","              fs: float, \n","              f_bank: np.ndarray, \n","              vwt: np.ndarray, \n","              new_fs: float) -> Tuple[np.ndarray, np.ndarray]:\n","    \"\"\"\n","    This function loads the GIGA-Science dataset locally.\n","    \n","    Parameters\n","    ----------\n","    db: GIGA_MI_ME\n","        A GIGA_MI_ME object created by the gcpds.databases.GIGA_MI_ME module\n","    sbj: int\n","        The subject to load\n","    eeg_ch_names: Sequence[str]\n","        The EEG channel names in order\n","    fs: float\n","        The sampling frecuency\n","    f_bank: np.ndarray\n","        The frecuency range(s) to use\n","    vwt: np.ndarray\n","        The time window to load\n","    new_fs: float\n","        The new sampling frecuency to resample the data to\n","    \n","    Returns\n","    ----------\n","    Tuple[np.ndarray, np.ndarray]\n","        A tuple containing the EEG signals for each trial and the corresponding label\n","    \n","    Notes\n","    ----------\n","    The database description can be found here:\n","    https://academic.oup.com/gigascience/article/6/7/gix034/3796323\n","    \"\"\"\n","    index_eeg_chs = db.format_channels_selectors(channels = eeg_ch_names) - 1\n","\n","    tf_repr = TimeFrequencyRpr(sfreq = fs, f_bank = f_bank, vwt = vwt)\n","\n","    db.load_subject(sbj)\n","    X, y = db.get_data(classes = ['left hand mi', 'right hand mi']) #Load MI classes, all channels {EEG}, reject bad trials, uV\n","    X = X[:, index_eeg_chs, :] #spatial rearrangement\n","    X = np.squeeze(tf_repr.transform(X))\n","    #Resampling\n","    if new_fs == fs:\n","        print('No resampling, since new sampling rate same.')\n","    else:\n","        print(\"Resampling from {:f} to {:f} Hz.\".format(fs, new_fs))\n","        X = resample(X, int((X.shape[-1]/fs)*new_fs), axis = -1)\n","\n","    #print(np.mean (X), np.var(X))\n","    return X, y"]},{"cell_type":"code","execution_count":4,"id":"9f3e4df1","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:32.280788Z","iopub.status.busy":"2024-08-12T16:00:32.280468Z","iopub.status.idle":"2024-08-12T16:00:32.287937Z","shell.execute_reply":"2024-08-12T16:00:32.287051Z"},"papermill":{"duration":0.025589,"end_time":"2024-08-12T16:00:32.289874","exception":false,"start_time":"2024-08-12T16:00:32.264285","status":"completed"},"tags":[]},"outputs":[],"source":["db = GIGA_MI_ME('/kaggle/input/giga-science-gcpds/GIGA_MI_ME')\n","fs = db.metadata['sampling_rate']\n","eeg_ch_names = ['Fp1','Fpz','Fp2',\n","              'AF7','AF3','AFz','AF4','AF8',\n","              'F7','F5','F3','F1','Fz','F2','F4','F6','F8',\n","              'FT7','FC5','FC3','FC1','FCz','FC2','FC4','FC6','FT8',\n","              'T7','C5','C3','C1','Cz','C2','C4','C6','T8',\n","              'TP7','CP5','CP3','CP1','CPz','CP2','CP4','CP6','TP8',\n","              'P9','P7','P5','P3','P1','Pz','P2','P4','P6','P8','P10',\n","              'PO7','PO3','POz','PO4','PO8',\n","              'O1','Oz','O2',\n","              'Iz']\n","load_args = dict(db = db,\n","                 eeg_ch_names = eeg_ch_names,\n","                 fs = fs,\n","                 f_bank = np.asarray([[4., 40.]]),\n","                 vwt = np.asarray([[2.5, 5]]),\n","                 new_fs = 128.)"]},{"cell_type":"code","execution_count":5,"id":"c920378a","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:32.32241Z","iopub.status.busy":"2024-08-12T16:00:32.322149Z","iopub.status.idle":"2024-08-12T16:00:32.342955Z","shell.execute_reply":"2024-08-12T16:00:32.342106Z"},"papermill":{"duration":0.039208,"end_time":"2024-08-12T16:00:32.344771","exception":false,"start_time":"2024-08-12T16:00:32.305563","status":"completed"},"tags":[]},"outputs":[],"source":["def butterworth_digital_filter(X, N, Wn, btype, fs, axis=-1, padtype=None, padlen=0, method='pad', irlen=None):\n","    \"\"\"\n","    Apply digital butterworth filter\n","    INPUT\n","    ------\n","    1. X: (D array)\n","    array with signals.\n","    2. N: (int+)\n","    The order of the filter.\n","    3. Wn: (float+ or 1D array)\n","    The critical frequency or frequencies. For lowpass and highpass filters, Wn is a scalar; for bandpass and bandstop filters, Wn is a length-2 vector.\n","    For a Butterworth filter, this is the point at which the gain drops to 1/sqrt(2) that of the passband (the “-3 dB point”).\n","    If fs is not specified, Wn units are normalized from 0 to 1, where 1 is the Nyquist frequency (Wn is thus in half cycles / sample and defined as 2*critical frequencies / fs). If fs is specified, Wn is in the same units as fs.\n","    4. btype: (str) {‘lowpass’, ‘highpass’, ‘bandpass’, ‘bandstop’}\n","    The type of filter\n","    5. fs: (float+)\n","    The sampling frequency of the digital system.\n","    6. axis: (int), Default=1.\n","    The axis of x to which the filter is applied.\n","    7. padtype: (str) or None, {'odd', 'even', 'constant'}\n","    This determines the type of extension to use for the padded signal to which the filter is applied. If padtype is None, no padding is used. The default is ‘odd’.\n","    8. padlen: (int+) or None, Default=0\n","    The number of elements by which to extend x at both ends of axis before applying the filter. This value must be less than x.shape[axis] - 1. padlen=0 implies no padding.\n","    9. method: (str), {'pad', 'gust'}\n","    Determines the method for handling the edges of the signal, either “pad” or “gust”. When method is “pad”, the signal is padded; the type of padding is determined by padtype\n","    and padlen, and irlen is ignored. When method is “gust”, Gustafsson’s method is used, and padtype and padlen are ignored.\n","    10. irlen: (int) or None, Default=nONE\n","    When method is “gust”, irlen specifies the length of the impulse response of the filter. If irlen is None, no part of the impulse response is ignored.\n","    For a long signal, specifying irlen can significantly improve the performance of the filter.\n","    OUTPUT\n","    ------\n","    X_fil: (D array)\n","    array with filtered signals.\n","    \"\"\"\n","    b, a = bw(N, Wn, btype, analog=False, output='ba', fs=fs)\n","    return filtfilt(b, a, X, axis=axis, padtype=padtype, padlen=padlen, method=method, irlen=irlen)\n","class TimeFrequencyRpr(BaseEstimator, TransformerMixin):\n","    \"\"\"\n","    Time frequency representation of EEG signals.\n","\n","    Parameters\n","    ----------\n","    1. sfreq:  (float) Sampling frequency in Hz.\n","    2. f_bank: (2D array) Filter banks Frequencies. Default=None\n","    3. vwt:    (2D array) Interest time windows. Default=None\n","    Methods\n","    -------\n","    1. fit(X, y=None)\n","    2. transform(X, y=None)\n","    \"\"\"\n","    def __init__(self, sfreq, f_bank=None, vwt=None):\n","        self.sfreq = sfreq\n","        self.f_bank = f_bank\n","        self.vwt = vwt\n","    # ------------------------------------------------------------------------------\n","\n","    def _validation_param(self):\n","        \"\"\"\n","        Validate Time-Frequency characterization parameters.\n","        INPUT\n","        -----\n","          1. self\n","        ------\n","          2. None\n","        \"\"\"\n","        if self.sfreq <= 0:\n","            raise ValueError('Non negative sampling frequency is accepted')\n","\n","\n","        if self.f_bank is None:\n","            self.flag_f_bank = False\n","        elif self.f_bank.ndim != 2:\n","            raise ValueError('Band frequencies have to be a 2D array')\n","        else:\n","            self.flag_f_bank = True\n","\n","        if self.vwt is None:\n","            self.flag_vwt = False\n","        elif self.vwt.ndim != 2:\n","            raise ValueError('Time windows have to be a 2D array')\n","        else:\n","            self.flag_vwt = True\n","\n","    # ------------------------------------------------------------------------------\n","    def _filter_bank(self, X):\n","        \"\"\"\n","        Filter bank Characterization.\n","        INPUT\n","        -----\n","          1. X: (3D array) set of EEG signals, shape (trials, channels, time_samples)\n","        OUTPUT\n","        ------\n","          1. X_f: (4D array) set of filtered EEG signals, shape (trials, channels, time_samples, frequency_bands)\n","        \"\"\"\n","        X_f = np.zeros((X.shape[0], X.shape[1], X.shape[2], self.f_bank.shape[0])) #epochs, Ch, Time, bands\n","        for f in np.arange(self.f_bank.shape[0]):\n","            X_f[:,:,:,f] = butterworth_digital_filter(X, N=5, Wn=self.f_bank[f], btype='bandpass', fs=self.sfreq)\n","        return X_f\n","\n","    # ------------------------------------------------------------------------------\n","    def _sliding_windows(self, X):\n","        \"\"\"\n","        Sliding Windows Characterization.\n","        INPUT\n","        -----\n","          1. X: (3D array) set of EEG signals, shape (trials, channels, time_samples)\n","        OUTPUT\n","        ------\n","          1. X_w: (4D array) shape (trials, channels, window_time_samples, number_of_windows)\n","        \"\"\"\n","        window_lenght = int(self.sfreq*self.vwt[0,1] - self.sfreq*self.vwt[0,0])\n","        X_w = np.zeros((X.shape[0], X.shape[1], window_lenght, self.vwt.shape[0]))\n","        for w in np.arange(self.vwt.shape[0]):\n","            X_w[:,:,:,w] = X[:,:,int(self.sfreq*self.vwt[w,0]):int(self.sfreq*self.vwt[w,1])]\n","        return X_w\n","\n","    # ------------------------------------------------------------------------------\n","    def fit(self, X, y=None):\n","        \"\"\"\n","        fit.\n","        INPUT\n","        -----\n","          1. X: (3D array) set of EEG signals, shape (trials, channels, time_samples)\n","          2. y: (1D array) target labels. Default=None\n","        OUTPUT\n","        ------\n","          1. None\n","        \"\"\"\n","        pass\n","\n","    # ------------------------------------------------------------------------------\n","    def transform(self, X, y=None):\n","        \"\"\"\n","        Time frequency representation of EEG signals.\n","        INPUT\n","        -----\n","          1. X: (3D array) set of EEG signals, shape (trials, channels, times)\n","        OUTPUT\n","        ------\n","          1. X_wf: (5D array) Time-frequency representation of EEG signals, shape (trials, channels, window_time_samples, number_of_windows, frequency_bands)\n","        \"\"\"\n","        self._validation_param()     #Validate sfreq, f_freq, vwt\n","\n","        #Avoid edge effects of digital filter, 1st:fbk, 2th:vwt\n","        if self.flag_f_bank:\n","            X_f = self._filter_bank(X)\n","        else:\n","            X_f = X[:,:,:,np.newaxis]\n","\n","        if self.flag_vwt:\n","            X_wf = []\n","            for f in range(X_f.shape[3]):\n","                X_wf.append(self._sliding_windows(X_f[:,:,:,f]))\n","            X_wf = np.stack(X_wf, axis=-1)\n","        else:\n","            X_wf = X_f[:,:,:,np.newaxis,:]\n","        return X_wf"]},{"cell_type":"code","execution_count":6,"id":"c7782da7","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:32.378216Z","iopub.status.busy":"2024-08-12T16:00:32.377891Z","iopub.status.idle":"2024-08-12T16:00:32.392513Z","shell.execute_reply":"2024-08-12T16:00:32.391734Z"},"papermill":{"duration":0.034132,"end_time":"2024-08-12T16:00:32.394291","exception":false,"start_time":"2024-08-12T16:00:32.360159","status":"completed"},"tags":[]},"outputs":[],"source":["def EEGNet(nb_classes, Chans = 64, Samples = 128, \n","             dropoutRate = 0.5, kernLength = 64, F1 = 8, \n","             D = 2, F2 = 16, norm_rate = 0.25, dropoutType = 'Dropout'):\n","    \"\"\" Keras Implementation of EEGNet\n","    http://iopscience.iop.org/article/10.1088/1741-2552/aace8c/meta\n","    Note that this implements the newest version of EEGNet and NOT the earlier\n","    version (version v1 and v2 on arxiv). We strongly recommend using this\n","    architecture as it performs much better and has nicer properties than\n","    our earlier version. For example:\n","        \n","        1. Depthwise Convolutions to learn spatial filters within a \n","        temporal convolution. The use of the depth_multiplier option maps \n","        exactly to the number of spatial filters learned within a temporal\n","        filter. This matches the setup of algorithms like FBCSP which learn \n","        spatial filters within each filter in a filter-bank. This also limits \n","        the number of free parameters to fit when compared to a fully-connected\n","        convolution. \n","        \n","        2. Separable Convolutions to learn how to optimally combine spatial\n","        filters across temporal bands. Separable Convolutions are Depthwise\n","        Convolutions followed by (1x1) Pointwise Convolutions. \n","        \n","    \n","    While the original paper used Dropout, we found that SpatialDropout2D \n","    sometimes produced slightly better results for classification of ERP \n","    signals. However, SpatialDropout2D significantly reduced performance \n","    on the Oscillatory dataset (SMR, BCI-IV Dataset 2A). We recommend using\n","    the default Dropout in most cases.\n","        \n","    Assumes the input signal is sampled at 128Hz. If you want to use this model\n","    for any other sampling rate you will need to modify the lengths of temporal\n","    kernels and average pooling size in blocks 1 and 2 as needed (double the \n","    kernel lengths for double the sampling rate, etc). Note that we haven't \n","    tested the model performance with this rule so this may not work well. \n","    \n","    The model with default parameters gives the EEGNet-8,2 model as discussed\n","    in the paper. This model should do pretty well in general, although it is\n","\tadvised to do some model searching to get optimal performance on your\n","\tparticular dataset.\n","    We set F2 = F1 * D (number of input filters = number of output filters) for\n","    the SeparableConv2D layer. We haven't extensively tested other values of this\n","    parameter (say, F2 < F1 * D for compressed learning, and F2 > F1 * D for\n","    overcomplete). We believe the main parameters to focus on are F1 and D. \n","    Inputs:\n","        \n","      nb_classes      : int, number of classes to classify\n","      Chans, Samples  : number of channels and time points in the EEG data\n","      dropoutRate     : dropout fraction\n","      kernLength      : length of temporal convolution in first layer. We found\n","                        that setting this to be half the sampling rate worked\n","                        well in practice. For the SMR dataset in particular\n","                        since the data was high-passed at 4Hz we used a kernel\n","                        length of 32.     \n","      F1, F2          : number of temporal filters (F1) and number of pointwise\n","                        filters (F2) to learn. Default: F1 = 8, F2 = F1 * D. \n","      D               : number of spatial filters to learn within each temporal\n","                        convolution. Default: D = 2\n","      dropoutType     : Either SpatialDropout2D or Dropout, passed as a string.\n","    \"\"\"\n","    \n","    if dropoutType == 'SpatialDropout2D':\n","        dropoutType = SpatialDropout2D\n","    elif dropoutType == 'Dropout':\n","        dropoutType = Dropout\n","    else:\n","        raise ValueError('dropoutType must be one of SpatialDropout2D '\n","                         'or Dropout, passed as a string.')\n","    \n","    input1   = Input(shape = (Chans, Samples, 1))\n","\n","    ##################################################################\n","    block1       = Conv2D(F1, (1, kernLength), padding = 'same',\n","                                   name='Conv2D_1',\n","                                   input_shape = (Chans, Samples, 1),\n","                                   use_bias = False)(input1)\n","    block1       = BatchNormalization()(block1)\n","    block1       = DepthwiseConv2D((Chans, 1), use_bias = False, \n","                                   name='Depth_wise_Conv2D_1',\n","                                   depth_multiplier = D,\n","                                   depthwise_constraint = max_norm(1.))(block1)\n","    block1       = BatchNormalization()(block1)\n","    block1       = Activation('elu')(block1)\n","    block1       = AveragePooling2D((1, 4))(block1)\n","    block1       = dropoutType(dropoutRate)(block1)\n","    \n","    block2       = SeparableConv2D(F2, (1, 16),\n","                                   name='Separable_Conv2D_1',\n","                                   use_bias = False, padding = 'same')(block1) # factorización para que sea más eficiente\n","    block2       = BatchNormalization()(block2)\n","    block2       = Activation('elu')(block2)\n","    block2       = AveragePooling2D((1, 8))(block2)\n","    block2       = dropoutType(dropoutRate)(block2)\n","        \n","    flatten      = Flatten(name = 'flatten')(block2)\n","    \n","    dense        = Dense(nb_classes, name = 'output', \n","                         kernel_constraint = max_norm(norm_rate))(flatten)\n","    softmax      = Activation('softmax', name = 'out_activation')(dense)\n","    \n","    return Model(inputs=input1, outputs=softmax)"]},{"cell_type":"code","execution_count":7,"id":"df16e949","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:32.425921Z","iopub.status.busy":"2024-08-12T16:00:32.425614Z","iopub.status.idle":"2024-08-12T16:00:32.692129Z","shell.execute_reply":"2024-08-12T16:00:32.691073Z"},"papermill":{"duration":0.284928,"end_time":"2024-08-12T16:00:32.694397","exception":false,"start_time":"2024-08-12T16:00:32.409469","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import KFold\n","from sklearn.preprocessing import OneHotEncoder\n","from keras_tuner import HyperModel, RandomSearch, Objective\n","from IPython.display import FileLink\n","\n","# Suponiendo que load_GIGA y EEGNet ya están definidos\n","\n","def CV_giga(sbj, results_df):\n","    print(\"Training subject\", sbj)\n","    X, y = load_GIGA(sbj=sbj, **load_args)\n","\n","    encoder = OneHotEncoder(sparse_output=True)\n","    y = encoder.fit_transform(y.reshape(-1,1)).toarray()\n","\n","    kfold = KFold(n_splits=5, shuffle=True, random_state=42)\n","    accuracies = []\n","\n","    for train, test in kfold.split(X, y):\n","        # Crear el modelo\n","        model = EEGNet(2, Samples=320, norm_rate=0.1, kernLength=64)\n","        model.compile(optimizer='Adam', loss='binary_crossentropy', metrics=['categorical_accuracy'])\n","\n","        # Entrenar el modelo\n","        history = model.fit(X[train], y[train], epochs=150, batch_size=32, verbose=0,\n","                            validation_data=(X[test], y[test]))\n","\n","        # Evaluar el modelo en el fold actual\n","        scores = model.evaluate(X[test], y[test], verbose=1)\n","        accuracies.append(scores[-1])\n","\n","    # Calcular la media y desviación estándar\n","    mean_accuracy = np.mean(accuracies)\n","    std_accuracy = np.std(accuracies)\n","\n","    # Mostrar resultados de la validación cruzada\n","    print(f\"Mean Val Binary Accuracy: {mean_accuracy * 100:.2f}% (+/- {std_accuracy * 100:.2f}%)\")\n","\n","    # Guardar los resultados en el DataFrame\n","    results_df = results_df.append({\n","        'Subject': sbj,\n","        'Mean Accuracy': mean_accuracy,\n","        'Standard Deviation': std_accuracy\n","    }, ignore_index=True)\n","\n","    return results_df\n","\n","# Crear un DataFrame vacío\n","results_df = pd.DataFrame(columns=['Subject', 'Mean Accuracy', 'Standard Deviation'])\n"]},{"cell_type":"code","execution_count":8,"id":"63573ba3","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:00:32.726306Z","iopub.status.busy":"2024-08-12T16:00:32.72601Z","iopub.status.idle":"2024-08-12T16:33:14.050256Z","shell.execute_reply":"2024-08-12T16:33:14.049275Z"},"papermill":{"duration":1961.342546,"end_time":"2024-08-12T16:33:14.052447","exception":false,"start_time":"2024-08-12T16:00:32.709901","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Training subject 1\n","Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:00:41.167003: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel/dropout/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n","WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n","I0000 00:00:1723478444.429276     212 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5128 - categorical_accuracy: 0.8750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5476 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4371 - categorical_accuracy: 0.8000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5628 - categorical_accuracy: 0.6750\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5001 - categorical_accuracy: 0.8000\n","Mean Val Binary Accuracy: 77.50% (+/- 6.89%)\n","Training subject 2\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:01:53.529211: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_5/dropout_10/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7233 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7430 - categorical_accuracy: 0.4750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7173 - categorical_accuracy: 0.4750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7329 - categorical_accuracy: 0.6000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7345 - categorical_accuracy: 0.4250\n","Mean Val Binary Accuracy: 52.00% (+/- 7.81%)\n","Training subject 3\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:03:02.228268: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_10/dropout_20/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.2678 - categorical_accuracy: 0.9750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2522 - categorical_accuracy: 1.0000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3601 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2553 - categorical_accuracy: 0.9750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2781 - categorical_accuracy: 1.0000\n","Mean Val Binary Accuracy: 98.00% (+/- 1.87%)\n","Training subject 4\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:04:10.926865: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_15/dropout_30/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.3489 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3838 - categorical_accuracy: 0.9000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3341 - categorical_accuracy: 0.9750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3484 - categorical_accuracy: 0.9250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3646 - categorical_accuracy: 0.9500\n","Mean Val Binary Accuracy: 94.00% (+/- 2.55%)\n","Training subject 5\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:05:19.799696: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_20/dropout_40/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.4638 - categorical_accuracy: 0.8000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5139 - categorical_accuracy: 0.8000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5186 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5644 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5162 - categorical_accuracy: 0.7692\n","Mean Val Binary Accuracy: 76.38% (+/- 3.36%)\n","Training subject 6\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:06:31.327500: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_25/dropout_50/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5355 - categorical_accuracy: 0.8056\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5728 - categorical_accuracy: 0.6944\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4855 - categorical_accuracy: 0.7778\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5000 - categorical_accuracy: 0.8571\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4990 - categorical_accuracy: 0.7143\n","Mean Val Binary Accuracy: 76.98% (+/- 5.96%)\n","Training subject 7\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:07:42.709962: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_30/dropout_60/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7659 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6723 - categorical_accuracy: 0.5833\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7087 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6060 - categorical_accuracy: 0.7083\n","2/2 [==============================] - 0s 7ms/step - loss: 0.7356 - categorical_accuracy: 0.4792\n","Mean Val Binary Accuracy: 55.42% (+/- 8.50%)\n","Training subject 8\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:08:57.746682: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_35/dropout_70/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6590 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7142 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.8344 - categorical_accuracy: 0.3750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6651 - categorical_accuracy: 0.5897\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7514 - categorical_accuracy: 0.5897\n","Mean Val Binary Accuracy: 53.59% (+/- 9.05%)\n","Training subject 9\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:10:11.830901: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_40/dropout_80/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7165 - categorical_accuracy: 0.4792\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6534 - categorical_accuracy: 0.6042\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7237 - categorical_accuracy: 0.5417\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6757 - categorical_accuracy: 0.5833\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7962 - categorical_accuracy: 0.3958\n","Mean Val Binary Accuracy: 52.08% (+/- 7.57%)\n","Training subject 10\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:11:27.393074: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_45/dropout_90/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5172 - categorical_accuracy: 0.6750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5135 - categorical_accuracy: 0.8500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5035 - categorical_accuracy: 0.8250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5059 - categorical_accuracy: 0.8250\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5212 - categorical_accuracy: 0.7250\n","Mean Val Binary Accuracy: 78.00% (+/- 6.78%)\n","Training subject 11\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:12:36.276278: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_50/dropout_100/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7515 - categorical_accuracy: 0.4000\n","2/2 [==============================] - 0s 7ms/step - loss: 0.7085 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6359 - categorical_accuracy: 0.6000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7384 - categorical_accuracy: 0.4500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6333 - categorical_accuracy: 0.6250\n","Mean Val Binary Accuracy: 52.00% (+/- 8.57%)\n","Training subject 12\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:13:44.462245: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_55/dropout_110/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7402 - categorical_accuracy: 0.6286\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5877 - categorical_accuracy: 0.7429\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6163 - categorical_accuracy: 0.5714\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5449 - categorical_accuracy: 0.6857\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5343 - categorical_accuracy: 0.7353\n","Mean Val Binary Accuracy: 67.28% (+/- 6.51%)\n","Training subject 13\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:14:54.774579: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_60/dropout_120/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.4792 - categorical_accuracy: 0.8500\n","2/2 [==============================] - 0s 7ms/step - loss: 0.4651 - categorical_accuracy: 0.8500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4374 - categorical_accuracy: 0.8750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4251 - categorical_accuracy: 0.9000\n","2/2 [==============================] - 0s 5ms/step - loss: 0.4919 - categorical_accuracy: 0.7500\n","Mean Val Binary Accuracy: 84.50% (+/- 5.10%)\n","Training subject 14\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:16:03.673285: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_65/dropout_130/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 5ms/step - loss: 0.2996 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2543 - categorical_accuracy: 1.0000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2898 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2940 - categorical_accuracy: 0.9750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3033 - categorical_accuracy: 0.9000\n","Mean Val Binary Accuracy: 95.50% (+/- 3.32%)\n","Training subject 15\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:17:11.645905: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_70/dropout_140/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.4475 - categorical_accuracy: 0.8462\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5975 - categorical_accuracy: 0.7895\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6102 - categorical_accuracy: 0.6579\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5513 - categorical_accuracy: 0.7368\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5216 - categorical_accuracy: 0.7632\n","Mean Val Binary Accuracy: 75.87% (+/- 6.21%)\n","Training subject 16\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:18:23.333001: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_75/dropout_150/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6384 - categorical_accuracy: 0.6000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6801 - categorical_accuracy: 0.5500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7967 - categorical_accuracy: 0.4000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.8347 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6708 - categorical_accuracy: 0.5128\n","Mean Val Binary Accuracy: 55.26% (+/- 9.88%)\n","Training subject 17\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:19:34.576350: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_80/dropout_160/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6889 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 7ms/step - loss: 0.6762 - categorical_accuracy: 0.6500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6590 - categorical_accuracy: 0.6750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6949 - categorical_accuracy: 0.5750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6424 - categorical_accuracy: 0.6500\n","Mean Val Binary Accuracy: 61.50% (+/- 5.61%)\n","Training subject 18\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:20:43.818623: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_85/dropout_170/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5855 - categorical_accuracy: 0.6750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5797 - categorical_accuracy: 0.6500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5738 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6188 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 7ms/step - loss: 0.6957 - categorical_accuracy: 0.5500\n","Mean Val Binary Accuracy: 64.00% (+/- 5.15%)\n","Training subject 19\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:21:51.212466: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_90/dropout_180/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 25ms/step - loss: 0.6384 - categorical_accuracy: 0.6897\n","1/1 [==============================] - 0s 26ms/step - loss: 0.7681 - categorical_accuracy: 0.3448\n","1/1 [==============================] - 0s 25ms/step - loss: 0.6340 - categorical_accuracy: 0.5862\n","1/1 [==============================] - 0s 25ms/step - loss: 0.6610 - categorical_accuracy: 0.5714\n","1/1 [==============================] - 0s 25ms/step - loss: 0.6131 - categorical_accuracy: 0.6429\n","Mean Val Binary Accuracy: 56.70% (+/- 11.88%)\n","Training subject 20\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:22:52.989516: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_95/dropout_190/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 25ms/step - loss: 0.6269 - categorical_accuracy: 0.6471\n","1/1 [==============================] - 0s 25ms/step - loss: 0.5569 - categorical_accuracy: 0.7647\n","1/1 [==============================] - 0s 24ms/step - loss: 0.6165 - categorical_accuracy: 0.5882\n","1/1 [==============================] - 0s 24ms/step - loss: 0.5558 - categorical_accuracy: 0.6875\n","1/1 [==============================] - 0s 23ms/step - loss: 0.6343 - categorical_accuracy: 0.6250\n","Mean Val Binary Accuracy: 66.25% (+/- 6.04%)\n","Training subject 21\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4524 - categorical_accuracy: 0.8250\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:24:04.080001: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_101/dropout_202/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 5ms/step - loss: 0.5328 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6090 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5696 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4307 - categorical_accuracy: 0.9231\n","Mean Val Binary Accuracy: 77.46% (+/- 8.74%)\n","Training subject 22\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 7ms/step - loss: 0.4878 - categorical_accuracy: 0.8000\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:25:16.625228: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_106/dropout_212/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6470 - categorical_accuracy: 0.6750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6464 - categorical_accuracy: 0.5500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5866 - categorical_accuracy: 0.6500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6786 - categorical_accuracy: 0.5750\n","Mean Val Binary Accuracy: 65.00% (+/- 8.80%)\n","Training subject 23\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3629 - categorical_accuracy: 0.8750\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:26:25.879192: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_111/dropout_222/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.4040 - categorical_accuracy: 0.8000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4176 - categorical_accuracy: 0.8205\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4060 - categorical_accuracy: 0.9487\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4258 - categorical_accuracy: 0.8462\n","Mean Val Binary Accuracy: 85.81% (+/- 5.18%)\n","Training subject 24\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6789 - categorical_accuracy: 0.6500\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:27:37.980070: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_116/dropout_232/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7381 - categorical_accuracy: 0.4250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7331 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7126 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6644 - categorical_accuracy: 0.5641\n","Mean Val Binary Accuracy: 52.78% (+/- 7.53%)\n","Training subject 25\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6596 - categorical_accuracy: 0.5750\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:28:48.942645: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_121/dropout_242/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5030 - categorical_accuracy: 0.8718\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4822 - categorical_accuracy: 0.7949\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5643 - categorical_accuracy: 0.6667\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5688 - categorical_accuracy: 0.5641\n","Mean Val Binary Accuracy: 69.45% (+/- 12.13%)\n","Training subject 26\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5400 - categorical_accuracy: 0.8250\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:29:59.935924: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_126/dropout_252/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5764 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6567 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5983 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5632 - categorical_accuracy: 0.8000\n","Mean Val Binary Accuracy: 73.50% (+/- 7.18%)\n","Training subject 27\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7346 - categorical_accuracy: 0.5676\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:31:11.181681: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_131/dropout_262/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6799 - categorical_accuracy: 0.5946\n","2/2 [==============================] - 0s 6ms/step - loss: 0.8016 - categorical_accuracy: 0.5135\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6417 - categorical_accuracy: 0.5946\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7595 - categorical_accuracy: 0.4595\n","Mean Val Binary Accuracy: 54.59% (+/- 5.24%)\n","Training subject 28\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6674 - categorical_accuracy: 0.6750\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:32:22.520732: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_136/dropout_272/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.4926 - categorical_accuracy: 0.7436\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5026 - categorical_accuracy: 0.8718\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6111 - categorical_accuracy: 0.6667\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5480 - categorical_accuracy: 0.6923\n","Mean Val Binary Accuracy: 72.99% (+/- 7.58%)\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]}],"source":["\n","# Iterar sobre los sujetos y guardar los resultados\n","for sbj in range(1, 29):\n","    results_df = CV_giga(sbj, results_df)"]},{"cell_type":"code","execution_count":9,"id":"fbb008e6","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:33:14.146525Z","iopub.status.busy":"2024-08-12T16:33:14.146243Z","iopub.status.idle":"2024-08-12T16:37:48.10164Z","shell.execute_reply":"2024-08-12T16:37:48.100691Z"},"papermill":{"duration":274.004359,"end_time":"2024-08-12T16:37:48.104221","exception":false,"start_time":"2024-08-12T16:33:14.099862","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Training subject 30\n","Resampling from 512.000000 to 128.000000 Hz.\n","1/1 [==============================] - 0s 25ms/step - loss: 0.7060 - categorical_accuracy: 0.5600\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:33:31.648315: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_141/dropout_282/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 26ms/step - loss: 0.6975 - categorical_accuracy: 0.5200\n","1/1 [==============================] - 0s 25ms/step - loss: 0.6514 - categorical_accuracy: 0.7083\n","1/1 [==============================] - 0s 24ms/step - loss: 0.7716 - categorical_accuracy: 0.4167\n","1/1 [==============================] - 0s 24ms/step - loss: 0.6744 - categorical_accuracy: 0.6250\n","Mean Val Binary Accuracy: 56.60% (+/- 9.82%)\n","Training subject 31\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5305 - categorical_accuracy: 0.7500\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:34:35.339832: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_146/dropout_292/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5288 - categorical_accuracy: 0.7500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5739 - categorical_accuracy: 0.7750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5864 - categorical_accuracy: 0.7500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.9375 - categorical_accuracy: 0.3333\n","Mean Val Binary Accuracy: 67.17% (+/- 16.94%)\n","Training subject 32\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7260 - categorical_accuracy: 0.4750\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:35:46.054267: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_151/dropout_302/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7235 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7837 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7761 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6992 - categorical_accuracy: 0.5500\n","Mean Val Binary Accuracy: 51.50% (+/- 2.55%)\n","Training subject 33\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7752 - categorical_accuracy: 0.4750\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:36:55.077319: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_156/dropout_312/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7365 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.8228 - categorical_accuracy: 0.4750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7421 - categorical_accuracy: 0.5500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6494 - categorical_accuracy: 0.5897\n","Mean Val Binary Accuracy: 52.29% (+/- 4.43%)\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]}],"source":["# Iterar sobre los sujetos y guardar los resultados\n","for sbj in range(30, 34):\n","    results_df = CV_giga(sbj, results_df)"]},{"cell_type":"code","execution_count":10,"id":"59c74d50","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:37:48.208919Z","iopub.status.busy":"2024-08-12T16:37:48.208081Z","iopub.status.idle":"2024-08-12T16:59:01.989416Z","shell.execute_reply":"2024-08-12T16:59:01.988465Z"},"papermill":{"duration":1273.835218,"end_time":"2024-08-12T16:59:01.991494","exception":false,"start_time":"2024-08-12T16:37:48.156276","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Training subject 35\n","Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:37:55.361038: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_160/dropout_320/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.3021 - categorical_accuracy: 0.9000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5049 - categorical_accuracy: 0.7500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4549 - categorical_accuracy: 0.7500\n","2/2 [==============================] - 0s 5ms/step - loss: 0.3900 - categorical_accuracy: 0.8500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3722 - categorical_accuracy: 0.9000\n","Mean Val Binary Accuracy: 83.00% (+/- 6.78%)\n","Training subject 36\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:39:03.954171: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_165/dropout_330/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6077 - categorical_accuracy: 0.6923\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5331 - categorical_accuracy: 0.7179\n","2/2 [==============================] - 0s 7ms/step - loss: 0.7683 - categorical_accuracy: 0.5385\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6136 - categorical_accuracy: 0.6154\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4788 - categorical_accuracy: 0.8718\n","Mean Val Binary Accuracy: 68.72% (+/- 11.16%)\n","Training subject 37\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:40:16.259040: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_170/dropout_340/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 7ms/step - loss: 0.5251 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5070 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4886 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5026 - categorical_accuracy: 0.7750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4596 - categorical_accuracy: 0.8250\n","Mean Val Binary Accuracy: 74.00% (+/- 5.15%)\n","Training subject 38\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:41:24.836846: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_175/dropout_350/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7217 - categorical_accuracy: 0.5897\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7110 - categorical_accuracy: 0.4737\n","2/2 [==============================] - 0s 7ms/step - loss: 0.7323 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6748 - categorical_accuracy: 0.5789\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7937 - categorical_accuracy: 0.4737\n","Mean Val Binary Accuracy: 52.32% (+/- 5.09%)\n","Training subject 39\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:42:37.007678: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_180/dropout_360/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5738 - categorical_accuracy: 0.6500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5337 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6605 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6619 - categorical_accuracy: 0.5500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5667 - categorical_accuracy: 0.7692\n","Mean Val Binary Accuracy: 66.38% (+/- 7.68%)\n","Training subject 40\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:43:47.423113: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_185/dropout_370/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7537 - categorical_accuracy: 0.6000\n","2/2 [==============================] - 0s 5ms/step - loss: 0.6213 - categorical_accuracy: 0.6750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6845 - categorical_accuracy: 0.4750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7030 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6983 - categorical_accuracy: 0.5750\n","Mean Val Binary Accuracy: 57.00% (+/- 6.78%)\n","Training subject 41\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:44:54.759421: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_190/dropout_380/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.3873 - categorical_accuracy: 0.9000\n","2/2 [==============================] - 0s 5ms/step - loss: 0.3252 - categorical_accuracy: 0.9750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3221 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 5ms/step - loss: 0.3727 - categorical_accuracy: 0.9000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3409 - categorical_accuracy: 0.9487\n","Mean Val Binary Accuracy: 93.47% (+/- 2.99%)\n","Training subject 42\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:46:07.910002: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_195/dropout_390/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.7460 - categorical_accuracy: 0.6500\n","2/2 [==============================] - 0s 9ms/step - loss: 0.6090 - categorical_accuracy: 0.7000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7631 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6618 - categorical_accuracy: 0.6000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6338 - categorical_accuracy: 0.6500\n","Mean Val Binary Accuracy: 62.50% (+/- 5.92%)\n","Training subject 43\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:47:15.900522: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_200/dropout_400/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.2485 - categorical_accuracy: 1.0000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2687 - categorical_accuracy: 1.0000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2668 - categorical_accuracy: 1.0000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2502 - categorical_accuracy: 0.9750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2562 - categorical_accuracy: 1.0000\n","Mean Val Binary Accuracy: 99.50% (+/- 1.00%)\n","Training subject 44\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:48:23.672360: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_205/dropout_410/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.4706 - categorical_accuracy: 0.8500\n","2/2 [==============================] - 0s 7ms/step - loss: 0.6111 - categorical_accuracy: 0.7250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5113 - categorical_accuracy: 0.7750\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5202 - categorical_accuracy: 0.7500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4986 - categorical_accuracy: 0.8250\n","Mean Val Binary Accuracy: 78.50% (+/- 4.64%)\n","Training subject 45\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:49:40.336633: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_210/dropout_420/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.6360 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.9094 - categorical_accuracy: 0.3000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7017 - categorical_accuracy: 0.5250\n","2/2 [==============================] - 0s 7ms/step - loss: 0.6804 - categorical_accuracy: 0.5750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7655 - categorical_accuracy: 0.6000\n","Mean Val Binary Accuracy: 50.50% (+/- 10.65%)\n","Training subject 46\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:50:48.765994: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_215/dropout_430/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.5752 - categorical_accuracy: 0.6875\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6281 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 8ms/step - loss: 0.6288 - categorical_accuracy: 0.6667\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4952 - categorical_accuracy: 0.8333\n","2/2 [==============================] - 0s 7ms/step - loss: 0.6085 - categorical_accuracy: 0.6809\n","Mean Val Binary Accuracy: 69.87% (+/- 7.08%)\n","Training subject 47\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:52:05.921168: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_220/dropout_440/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 7ms/step - loss: 0.5613 - categorical_accuracy: 0.6923\n","2/2 [==============================] - 0s 7ms/step - loss: 0.5011 - categorical_accuracy: 0.7949\n","2/2 [==============================] - 0s 5ms/step - loss: 0.5156 - categorical_accuracy: 0.8421\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4668 - categorical_accuracy: 0.8421\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6722 - categorical_accuracy: 0.5789\n","Mean Val Binary Accuracy: 75.01% (+/- 10.16%)\n","Training subject 48\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:53:16.878322: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_225/dropout_450/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.3413 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3665 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 5ms/step - loss: 0.3655 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3127 - categorical_accuracy: 0.9500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.2778 - categorical_accuracy: 1.0000\n","Mean Val Binary Accuracy: 96.00% (+/- 2.00%)\n","Training subject 49\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:54:27.664753: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_230/dropout_460/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 9ms/step - loss: 0.5998 - categorical_accuracy: 0.6923\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4664 - categorical_accuracy: 0.8205\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5341 - categorical_accuracy: 0.7368\n","2/2 [==============================] - 0s 6ms/step - loss: 0.5638 - categorical_accuracy: 0.7632\n","2/2 [==============================] - 0s 6ms/step - loss: 0.4465 - categorical_accuracy: 0.8158\n","Mean Val Binary Accuracy: 76.57% (+/- 4.85%)\n","Training subject 50\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:55:41.353534: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_235/dropout_470/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.3689 - categorical_accuracy: 0.9250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3858 - categorical_accuracy: 0.9000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3756 - categorical_accuracy: 0.8750\n","2/2 [==============================] - 0s 5ms/step - loss: 0.3963 - categorical_accuracy: 0.8500\n","2/2 [==============================] - 0s 6ms/step - loss: 0.3748 - categorical_accuracy: 0.9250\n","Mean Val Binary Accuracy: 89.50% (+/- 2.92%)\n","Training subject 51\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:56:49.943135: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_240/dropout_480/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.9133 - categorical_accuracy: 0.4872\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7228 - categorical_accuracy: 0.5385\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7883 - categorical_accuracy: 0.4103\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6601 - categorical_accuracy: 0.5641\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7910 - categorical_accuracy: 0.4211\n","Mean Val Binary Accuracy: 48.42% (+/- 6.13%)\n","Training subject 52\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]},{"name":"stdout","output_type":"stream","text":["Resampling from 512.000000 to 128.000000 Hz.\n"]},{"name":"stderr","output_type":"stream","text":["2024-08-12 16:58:01.552599: E tensorflow/core/grappler/optimizers/meta_optimizer.cc:961] layout failed: INVALID_ARGUMENT: Size of values 0 does not match size of permutation 4 @ fanin shape inmodel_245/dropout_490/dropout/SelectV2-2-TransposeNHWCToNCHW-LayoutOptimizer\n"]},{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 7ms/step - loss: 0.6486 - categorical_accuracy: 0.6000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6311 - categorical_accuracy: 0.6250\n","2/2 [==============================] - 0s 6ms/step - loss: 0.7257 - categorical_accuracy: 0.5000\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6473 - categorical_accuracy: 0.5750\n","2/2 [==============================] - 0s 6ms/step - loss: 0.6270 - categorical_accuracy: 0.6250\n","Mean Val Binary Accuracy: 58.50% (+/- 4.64%)\n"]},{"name":"stderr","output_type":"stream","text":["/tmp/ipykernel_25/1245717988.py:41: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  results_df = results_df.append({\n"]}],"source":["for sbj in range(35, 53):\n","    results_df = CV_giga(sbj, results_df)"]},{"cell_type":"code","execution_count":11,"id":"816907f9","metadata":{"execution":{"iopub.execute_input":"2024-08-12T16:59:02.133044Z","iopub.status.busy":"2024-08-12T16:59:02.132685Z","iopub.status.idle":"2024-08-12T16:59:02.393437Z","shell.execute_reply":"2024-08-12T16:59:02.392431Z"},"papermill":{"duration":0.333465,"end_time":"2024-08-12T16:59:02.395559","exception":false,"start_time":"2024-08-12T16:59:02.062094","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["    Subject  Mean Accuracy  Standard Deviation\n","0       1.0       0.775000            0.068920\n","1       2.0       0.520000            0.078103\n","2       3.0       0.980000            0.018708\n","3       4.0       0.940000            0.025495\n","4       5.0       0.763846            0.033649\n","5       6.0       0.769841            0.059550\n","6       7.0       0.554167            0.084984\n","7       8.0       0.535897            0.090460\n","8       9.0       0.520833            0.075691\n","9      10.0       0.780000            0.067823\n","10     11.0       0.520000            0.085732\n","11     12.0       0.672773            0.065135\n","12     13.0       0.845000            0.050990\n","13     14.0       0.955000            0.033166\n","14     15.0       0.758704            0.062056\n","15     16.0       0.552564            0.098843\n","16     17.0       0.615000            0.056125\n","17     18.0       0.640000            0.051478\n","18     19.0       0.566995            0.118784\n","19     20.0       0.662500            0.060384\n","20     21.0       0.774615            0.087380\n","21     22.0       0.650000            0.088034\n","22     23.0       0.858077            0.051823\n","23     24.0       0.527821            0.075318\n","24     25.0       0.694487            0.121298\n","25     26.0       0.735000            0.071764\n","26     27.0       0.545946            0.052407\n","27     28.0       0.729872            0.075825\n","28     30.0       0.566000            0.098176\n","29     31.0       0.671667            0.169444\n","30     32.0       0.515000            0.025495\n","31     33.0       0.522949            0.044262\n","32     35.0       0.830000            0.067823\n","33     36.0       0.687180            0.111649\n","34     37.0       0.740000            0.051478\n","35     38.0       0.523212            0.050946\n","36     39.0       0.663846            0.076821\n","37     40.0       0.570000            0.067823\n","38     41.0       0.934744            0.029876\n","39     42.0       0.625000            0.059161\n","40     43.0       0.995000            0.010000\n","41     44.0       0.785000            0.046368\n","42     45.0       0.505000            0.106536\n","43     46.0       0.698670            0.070750\n","44     47.0       0.750067            0.101556\n","45     48.0       0.960000            0.020000\n","46     49.0       0.765722            0.048454\n","47     50.0       0.895000            0.029155\n","48     51.0       0.484211            0.061307\n","49     52.0       0.585000            0.046368\n"]},{"data":{"text/html":["<a href='cross_validation_results_eegnet.xlsx' target='_blank'>cross_validation_results_eegnet.xlsx</a><br>"],"text/plain":["/kaggle/working/cross_validation_results_eegnet.xlsx"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["# Guardar los resultados en un archivo xlsx\n","results_df.to_excel('cross_validation_results_eegnet.xlsx', index=False)\n","\n","# Mostrar el DataFrame final\n","print(results_df)\n","\n","# Generar un enlace de descarga para el archivo xlsx\n","FileLink('cross_validation_results_eegnet.xlsx')"]}],"metadata":{"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"datasetId":3008205,"sourceId":5175158,"sourceType":"datasetVersion"}],"dockerImageVersionId":30733,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":3620.320746,"end_time":"2024-08-12T16:59:05.695088","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-08-12T15:58:45.374342","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}